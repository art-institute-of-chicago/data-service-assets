class Gallery < Place

  def initialize
    super

    self.fq = 'hasModel:Place'
    self.fq << ' AND (type:"http://definitions.artic.edu/ontology/1.0/WebMobilePublished"'

    # The above condition alone should work. But we're seeing some issues
    # with the LAKE data pipeline where place records are not getting the
    # WebMobilePublished RDF type in LPM Solr, and it's unclear when that
    # will get resolved. So in the mean time, following is a list of all
    # galleries that can have an artwork in it. This messy block makes
    # sure we're getting those.
    self.fq << ' citiUid:27518'
    self.fq << ' citiUid:25735'
    self.fq << ' citiUid:25736'
    self.fq << ' citiUid:25737'
    self.fq << ' citiUid:25738'
    self.fq << ' citiUid:25739'
    self.fq << ' citiUid:25740'
    self.fq << ' citiUid:25741'
    self.fq << ' citiUid:25742'
    self.fq << ' citiUid:25743'
    self.fq << ' citiUid:25744'
    self.fq << ' citiUid:25745'
    self.fq << ' citiUid:25746'
    self.fq << ' citiUid:25747'
    self.fq << ' citiUid:25748'
    self.fq << ' citiUid:27707'
    self.fq << ' citiUid:27710'
    self.fq << ' citiUid:2'
    self.fq << ' citiUid:2147483599'
    self.fq << ' citiUid:2147477257'
    self.fq << ' citiUid:26129'
    self.fq << ' citiUid:27497'
    self.fq << ' citiUid:27496'
    self.fq << ' citiUid:2707'
    self.fq << ' citiUid:2706'
    self.fq << ' citiUid:28763'
    self.fq << ' citiUid:28764'
    self.fq << ' citiUid:28765'
    self.fq << ' citiUid:2147478135'
    self.fq << ' citiUid:2147478134'
    self.fq << ' citiUid:2147478133'
    self.fq << ' citiUid:2147478132'
    self.fq << ' citiUid:2147478131'
    self.fq << ' citiUid:2147478130'
    self.fq << ' citiUid:2147478129'
    self.fq << ' citiUid:2147480090'
    self.fq << ' citiUid:2147480089'
    self.fq << ' citiUid:2147480173'
    self.fq << ' citiUid:25082'
    self.fq << ' citiUid:25083'
    self.fq << ' citiUid:25084'
    self.fq << ' citiUid:25085'
    self.fq << ' citiUid:25086'
    self.fq << ' citiUid:25087'
    self.fq << ' citiUid:2147478121'
    self.fq << ' citiUid:25480'
    self.fq << ' citiUid:2147478120'
    self.fq << ' citiUid:2147478119'
    self.fq << ' citiUid:2147478118'
    self.fq << ' citiUid:2147477833'
    self.fq << ' citiUid:2147478117'
    self.fq << ' citiUid:2147474874'
    self.fq << ' citiUid:2147475440'
    self.fq << ' citiUid:2147470998'
    self.fq << ' citiUid:24649'
    self.fq << ' citiUid:24650'
    self.fq << ' citiUid:24651'
    self.fq << ' citiUid:26132'
    self.fq << ' citiUid:26772'
    self.fq << ' citiUid:26773'
    self.fq << ' citiUid:26774'
    self.fq << ' citiUid:26775'
    self.fq << ' citiUid:26776'
    self.fq << ' citiUid:26777'
    self.fq << ' citiUid:2147477236'
    self.fq << ' citiUid:2147475157'
    self.fq << ' citiUid:2147475001'
    self.fq << ' citiUid:2147476004'
    self.fq << ' citiUid:2147476040'
    self.fq << ' citiUid:2147476039'
    self.fq << ' citiUid:2147476055'
    self.fq << ' citiUid:2147476053'
    self.fq << ' citiUid:2147476052'
    self.fq << ' citiUid:2147476014'
    self.fq << ' citiUid:2147471010'
    self.fq << ' citiUid:2147476006'
    self.fq << ' citiUid:2147476007'
    self.fq << ' citiUid:2147476051'
    self.fq << ' citiUid:2147476050'
    self.fq << ' citiUid:2147476049'
    self.fq << ' citiUid:2147476019'
    self.fq << ' citiUid:2147476048'
    self.fq << ' citiUid:2147476037'
    self.fq << ' citiUid:23997'
    self.fq << ' citiUid:24000'
    self.fq << ' citiUid:24317'
    self.fq << ' citiUid:26509'
    self.fq << ' citiUid:2147477218'
    self.fq << ' citiUid:2147472011'
    self.fq << ' citiUid:2697'
    self.fq << ' citiUid:2698'
    self.fq << ' citiUid:2147483643'
    self.fq << ' citiUid:2147483640'
    self.fq << ' citiUid:2147483639'
    self.fq << ' citiUid:2147483638'
    self.fq << ' citiUid:2147483637'
    self.fq << ' citiUid:2147483636'
    self.fq << ' citiUid:2147483635'
    self.fq << ' citiUid:2147483634'
    self.fq << ' citiUid:2147483633'
    self.fq << ' citiUid:2147483632'
    self.fq << ' citiUid:2147483631'
    self.fq << ' citiUid:2147483630'
    self.fq << ' citiUid:2147483629'
    self.fq << ' citiUid:2147483628'
    self.fq << ' citiUid:2147483627'
    self.fq << ' citiUid:2147483626'
    self.fq << ' citiUid:2147483625'
    self.fq << ' citiUid:2147483624'
    self.fq << ' citiUid:2147483623'
    self.fq << ' citiUid:2147483622'
    self.fq << ' citiUid:2147483621'
    self.fq << ' citiUid:2147483619'
    self.fq << ' citiUid:2147483618'
    self.fq << ' citiUid:2147483617'
    self.fq << ' citiUid:2147483616'
    self.fq << ' citiUid:2147483615'
    self.fq << ' citiUid:2147483614'
    self.fq << ' citiUid:2147483613'
    self.fq << ' citiUid:2147483612'
    self.fq << ' citiUid:2147483611'
    self.fq << ' citiUid:2147483610'
    self.fq << ' citiUid:2147483609'
    self.fq << ' citiUid:2147483608'
    self.fq << ' citiUid:2147483607'
    self.fq << ' citiUid:2147483606'
    self.fq << ' citiUid:2147483605'
    self.fq << ' citiUid:2147483604'
    self.fq << ' citiUid:2147483603'
    self.fq << ' citiUid:2147483602'
    self.fq << ' citiUid:2147483601'
    self.fq << ' citiUid:2147483600'
    self.fq << ' citiUid:2147476836'
    self.fq << ' citiUid:25293'
    self.fq << ' citiUid:25287'
    self.fq << ' citiUid:25288'
    self.fq << ' citiUid:25289'
    self.fq << ' citiUid:25290'
    self.fq << ' citiUid:2147480055'
    self.fq << ' citiUid:26746'
    self.fq << ' citiUid:28496'
    self.fq << ' citiUid:28497'
    self.fq << ' citiUid:28499'
    self.fq << ' citiUid:28500'
    self.fq << ' citiUid:28501'
    self.fq << ' citiUid:28498'
    self.fq << ' citiUid:28502'
    self.fq << ' citiUid:28503'
    self.fq << ' citiUid:28504'
    self.fq << ' citiUid:28505'
    self.fq << ' citiUid:2147478672'
    self.fq << ' citiUid:2147479705'
    self.fq << ' citiUid:2147479704'
    self.fq << ' citiUid:2147479703'
    self.fq << ' citiUid:2147479702'
    self.fq << ' citiUid:2147479701'
    self.fq << ' citiUid:2147479700'
    self.fq << ' citiUid:2147479699'
    self.fq << ' citiUid:2147479698'
    self.fq << ' citiUid:2147479697'
    self.fq << ' citiUid:2147478061'
    self.fq << ' citiUid:2147478064'
    self.fq << ' citiUid:2147478065'
    self.fq << ' citiUid:2147475518'
    self.fq << ' citiUid:2147478066'
    self.fq << ' citiUid:2147478068'
    self.fq << ' citiUid:21434'
    self.fq << ' citiUid:23967'
    self.fq << ' citiUid:23970'
    self.fq << ' citiUid:28833'
    self.fq << ' citiUid:28834'
    self.fq << ' citiUid:28835'
    self.fq << ' citiUid:28836'
    self.fq << ' citiUid:28837'
    self.fq << ' citiUid:28838'
    self.fq << ' citiUid:28839'
    self.fq << ' citiUid:28840'
    self.fq << ' citiUid:28841'
    self.fq << ' citiUid:25456'
    self.fq << ' citiUid:24575'
    self.fq << ' citiUid:24366'
    self.fq << ' citiUid:24312'
    self.fq << ' citiUid:23978'
    self.fq << ' citiUid:24310'
    self.fq << ' citiUid:24308'
    self.fq << ' citiUid:23977'
    self.fq << ' citiUid:23976'
    self.fq << ' citiUid:24306'
    self.fq << ' citiUid:23975'
    self.fq << ' citiUid:23974'
    self.fq << ' citiUid:24304'
    self.fq << ' citiUid:24305'
    self.fq << ' citiUid:23973'
    self.fq << ' citiUid:24302'
    self.fq << ' citiUid:24303'
    self.fq << ' citiUid:25473'
    self.fq << ' citiUid:24300'
    self.fq << ' citiUid:23972'
    self.fq << ' citiUid:24301'
    self.fq << ' citiUid:23989'
    self.fq << ' citiUid:24564'
    self.fq << ' citiUid:23990'
    self.fq << ' citiUid:24565'
    self.fq << ' citiUid:23991'
    self.fq << ' citiUid:24566'
    self.fq << ' citiUid:23992'
    self.fq << ' citiUid:23993'
    self.fq << ' citiUid:24568'
    self.fq << ' citiUid:24569'
    self.fq << ' citiUid:23994'
    self.fq << ' citiUid:24570'
    self.fq << ' citiUid:23995'
    self.fq << ' citiUid:23996'
    self.fq << ' citiUid:24571'
    self.fq << ' citiUid:24572'
    self.fq << ' citiUid:24573'
    self.fq << ' citiUid:27508'
    self.fq << ' citiUid:27499'
    self.fq << ' citiUid:27500'
    self.fq << ' citiUid:27501'
    self.fq << ' citiUid:27502'
    self.fq << ' citiUid:27504'
    self.fq << ' citiUid:27505'
    self.fq << ' citiUid:27507'
    self.fq << ' citiUid:2147473659'
    self.fq << ' citiUid:2147477076'
    self.fq << ' citiUid:25237'
    self.fq << ' citiUid:26132'
    self.fq << ' citiUid:2147472240'
    self.fq << ' citiUid:27513'
    self.fq << ' citiUid:346'
    self.fq << ' citiUid:2147476865'
    self.fq << ')'
  end

  # TODO: Abstract boolean into lake_unwrapper.rb (?)
  # isClosed contains some irregularities that prevent it from abstraction
  # https://lakesolridxweb.artic.edu/solr/lpm/select?wt=json&facet.field=isClosed&facet.limit=-1&rows=0
  def isClosed( data )

    # default to expectations...
    return true if data == "<Closed>"

    return false if data == "<NOT Closed>"
    return false

    # historic responses, for reference:
    return false if data == nil
    return true if data == "True"
    return false if data == "False"
    return false if data == "<NOT Closed>"

  end

  def transform( data, ret )

    # Get type from Place
    ret = super(data, ret)

    # Get latitude and longitude via inherited method
    ret = self.getLatLong(data, ret)

    ret[:closed] = isClosed( data.get(:isClosed) )

    # Some galleryNumbers are NOT numbers, e.g. 297A
    ret[:number] = data.get(:galleryNumber)

    # Some galleryFloors are NOT numbers, e.g. LL
    # https://lakesolridxweb.artic.edu/solr/lpm_prod/select?wt=json&facet.field=galleryFloor&facet.limit=-1&rows=0
    ret[:floor] = data.get(:galleryFloor)

    # I don't want to pass names. Waiting until we get GUIDs.
    # ret[:category] = data.get(:publishCategory)

    ret

  end
end
